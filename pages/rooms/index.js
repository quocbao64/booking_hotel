/* eslint-disable no-unused-vars */
/* eslint-disable react-hooks/rules-of-hooks */
/* eslint-disable jsx-a11y/no-static-element-interactions */
/* eslint-disable jsx-a11y/label-has-associated-control */
import axios from 'axios';
import { format } from 'date-fns';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useContext, useEffect, useState } from 'react';
import { DateRange } from 'react-date-range';
import 'react-date-range/dist/styles.css'; // main css file
import 'react-date-range/dist/theme/default.css'; // theme css file
import Footer from '../../components/Footer/Footer';
import Header from '../../components/Header/Header';
import Navbar from '../../components/Navbar/Navbar';
import Newsletter from '../../components/Newsletter/Newsletter';
import SearchItem from '../../components/SearchItem/SearchItem';
import { Context } from '../../ContextApi/Context';
import style from '../../styles/hotels.module.scss';

const index = ({ hotelList }) => {
    const { query } = useRouter();
    const [openDate, setOpenDate] = useState(false);
    const [quantity, setQuantity] = useState(query.quantity || null);
    const [rate, setRate] = useState(query.rate || null);
    const [dates, setDates] = useState([
        {
            startDate: new Date(),
            endDate: new Date(),
            key: 'selection',
        },
    ]);
    const [min, setMin] = useState(0);
    const [max, setMax] = useState(0);
    const [star, setStar] = useState(0)
    const [hotelData, setHotelData] = useState(hotelList);
    const [emptySearch, setEmptySearch] = useState("")

    const { dispatch } = useContext(Context);

    const handleSubmit = async (e) => {
        e.preventDefault();
        // fetch data from server by search values
        const url = `http://localhost:3000/filter?from=${dates[0].startDate?.toISOString()}&to=${dates[0].endDate?.toISOString()}`
        quantity !== 0 && (url += `&quantity=${quantity}`)
        min !== 0 && (url += `&min=${min}`)
        max !== 0 && (url += `&max=${max}`)
        star !== 0 && (url += `&star=${star}`)

        const hotels = await axios.get(url);
        const hotelDatas = await hotels.data.data;
        if (hotelDatas.length === 0) {
            setEmptySearch("Không tìm thấy phòng theo bộ lọc")
        }
        setHotelData(hotelDatas);
    };

    useEffect(() => {
        console.log(hotelData);
    }, [hotelData])
    

    return (
        <div className={style.hotels_page}>
            <Head>
                <title>Rooms - Find your hotel</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/home_icon-icons.com_73532.ico" />
            </Head>
            <Navbar />
            <Header type="hList" />

            <div className={style.hotels_page_main}>
                <div className={style.hotels_page_search}>
                    <h2>Tìm kiếm</h2>
                    <div className={style.search_item}>
                        <label>Số giường</label>
                        <input
                            type="number"
                            value={quantity}
                            onChange={(e) => setQuantity(e.target.value)}
                        />
                    </div>
                    <div className={style.search_item}>
                        <label>Ngày nhận phòng</label>
                        <span
                            className={style.search_item_date}
                            onClick={() => setOpenDate(!openDate)}
                        >{`${format(dates[0]?.startDate, 'MM/dd/yyyy')} đến ${format(
                            dates[0].endDate,
                            'MM/dd/yyyy'
                        )}`}</span>
                        {openDate && (
                            <DateRange
                                editableDateInputs
                                onChange={(item) => setDates([item.selection])}
                                ranges={dates}
                                className={style.header_search_calender}
                                minDate={new Date()}
                            />
                        )}
                    </div>

                    <div className={style.search_item}>
                        <label style={{ marginBottom: '11px', marginTop: '10px' }}>Lựa chọn</label>
                        <div className={style.search_item_option}>
                            <span className={style.option_txt}>
                                Giá thấp nhất <small className={style.night_batch}>mỗi đêm</small>
                            </span>
                            <input
                                type="number"
                                className={style.option_inp}
                                min={1}
                                onChange={(e) => setMin(e.target.value)}
                            />
                        </div>

                        <div className={style.search_item_option}>
                            <span className={style.option_txt}>
                                Giá cao nhất <small className={style.night_batch}>mỗi đêm</small>
                            </span>
                            <input
                                type="number"
                                className={style.option_inp}
                                max={5000}
                                min={1}
                                onChange={(e) => setMax(e.target.value)}
                            />
                        </div>

                        <div className={style.search_item_option}>
                            <span className={style.option_txt}>Đánh giá</span>
                            <input
                                type="number"
                                min={1}
                                max={5}
                                value={star}
                                onChange={(e) => setStar(e.target.value)}
                                className={style.option_inp}
                                placeholder={star}
                            />
                        </div>
                    </div>
                    <button
                        className={style.header_search_btn}
                        type="button"
                        onClick={handleSubmit}
                    >
                        Tìm kiếm
                    </button>
                </div>

                <div className={style.hotels_page_result}>
                    {console.log(emptySearch)}
                    {emptySearch !== "" ? <h4>{emptySearch}</h4> : ""}
                    {hotelData?.map((results_item) => (
                        <SearchItem results={results_item} key={results_item?.room_id} />
                    ))}
                </div>
            </div>

            <Newsletter />
            <Footer />
        </div>
    );
};

export default index;

// fetch the data using getStaticProps
export async function getServerSideProps(context) {
    const { query } = context;
    const { quantity, rate } = query;
    console.log(query);
    if (quantity !== undefined || rate !== undefined) {
        let url = "http://localhost:3000/filter?"
        quantity !== undefined && (url += `&quantity=${quantity}`)
        rate !== undefined && (url += `&star=${rate}`)
        const response = await axios.get(url)
        const data = await response.data.data

        return {
            props: { hotelList: data }
        }
    }
    else {
        const response = await axios.get('http://localhost:3001/api/rooms')
        const data = await response.data.data

        return {
            props: { hotelList: data }
        }
    }
}
